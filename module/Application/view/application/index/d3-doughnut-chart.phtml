<?php

$this->inlineScript()->appendFile('https://cdnjs.cloudflare.com/ajax/libs/d3/4.4.1/d3.js');
$this->headStyle()->appendStyle(<<<CSS
    .legend rect {
        cursor: pointer;
        stroke-width: 1;
    }

    .legend rect.disabled {
        fill: transparent !important;
    }

    .info text {
            text-anchor: middle;
            dominant-baseline: central;
            font-size: 1.4em;
    }
CSS
);
$this->inlineScript()->appendScript(<<<JS
    jQuery(function() {
        var color = d3.scaleOrdinal(d3.schemeCategory20c);

        var width = 500;
        var height = 300;

        var legendRectSize = 18;
        var legendSpacing = 4;

        var outerRadius = d3.min([width, height]) / 2;
        var innerRadius = outerRadius / 2;

        var arc = d3.arc()
            .innerRadius(innerRadius)
            .outerRadius(outerRadius - 4); // To save some space for the 3px stroke on mouse over

        var svg = d3.select("div.chart")
            .append("svg")
              .attr("width", width)
              .attr("height", height)
            .append("g")
              .attr("transform", "translate(" + outerRadius +  ", " + outerRadius + ")");

        var info = svg.append("g")
             .attr("class", "info");
        var infoLabel = info.append("text")
            .attr("x", 0)
            .attr("y", -15);
        var infoValue = info.append("text")
            .attr("x", 0)
            .attr("y", 15);

        var pie = d3.pie()
            .value(function (d) { return d.count; })
            .sort(null);

        d3.json("/d3-get-data", function(error, datasets) {
            if (error) throw error;

            // Enable all datasets
            datasets.forEach(function (dataset) {
                dataset.enabled = true;
            })

            // --- Arcs ---
            var arcs = svg.selectAll("g.arc")
                  .data(pie(datasets))
                .enter()
                .append("g")
                  .attr("class", "arc")
                  .each(function (d) {
                      // initializing a current value in every arc that will be used for animation
                      this._current = d;
                  });

            var paths = arcs.append("path")
                  .attr("fill", function(d, i) {
                      return color(d.data.label);
                  })
                  .attr("stroke", "white")
                  .attr("d", arc)
                  .on("mouseover", function (d) {
                      d3.select(this)
                          .style("stroke-width", 3)
                          .attr("stroke", color(d.data.label));
                  })
                  .on("mouseout", function (d) {
                      d3.select(this)
                          .style("stroke-width", 1)
                          .attr("stroke", "white");
                  });

            // --- Interactive info texts ---
            arcs.on("mouseover", function (arc) {
                infoLabel.text(arc.data.label);
                infoValue.text(arc.data.count);
                d3.select(this).moveToFront();
            });
            arcs.on("mouseout", function (arc) {
                infoLabel.text('Total');
                infoValue.text('255');
            });

            // --- Legend ---
            var legends = svg.selectAll("g.legend")
                  .data(color.domain())
                .enter().append("g")
                  .attr("class", "legend")
                  .attr("transform", function (d, index) {
                       var height = legendRectSize + legendSpacing;
                       var offset = height * color.domain().length / 2;
                       var horizontal = outerRadius + 2 * legendRectSize + 0.5;
                       var vertical = index * height - offset + 0.5;

                       return "translate(" + horizontal + "," + vertical + ")";
                  });

            legends.append("rect")
                .attr("width", legendRectSize)
                .attr("height", legendRectSize)
                .style("fill", color)
                .style("stroke", color)
                .on('click', function (label) {
                    var rect = d3.select(this);
                    var rectIsEnabled;

                    if (rect.attr('class') === 'disabled') {
                        rect.attr('class', '');
                        rectIsEnabled = true;
                    } else {
                        var totalEnabled = d3.sum(datasets.map(function (dataset) {
                            return dataset.enabled ? 1 : 0;
                        }));

                        // At least one dataset needs to be enabled
                        if (totalEnabled < 2) return;

                        // At least two datasets are enabled so we can disable this one
                        rect.attr('class', 'disabled');
                        rectIsEnabled = false;
                    }

                    // Redefine the value function
                    pie.value(function(dataset) {
                        if (dataset.label === label) {
                            dataset.enabled = rectIsEnabled;
                            return dataset.enabled ? dataset.count : 0;
                        }
                    });

                    arcs.data(pie(datasets));
                });

            legends.append("text")
                .attr("x", legendRectSize + legendSpacing)
                .attr("y", legendRectSize - legendSpacing)
                .text(function (d) { return d; })
        });

        // Function to move element to front
        d3.selection.prototype.moveToFront = function () {
            return this.each(function () {
                this.parentNode.appendChild(this);
            });
        };
    });
JS
);
?>
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div style="padding-top: 1em; padding-bottom: 1em">
                <h2>Overview</h2>
            </div>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-sm-12">
            <div class="chart"></div>
        </div>
    </div>
</div>